// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostOfficeAPI.Infra.Data;

#nullable disable

namespace PostOfficeAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240517081559_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Parcel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BagId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 3)");

                    b.HasKey("Id");

                    b.HasIndex("BagId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("PostOfficeAPI.Models.Bag", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("BagType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ShipmentId");

                    b.ToTable("Bags", (string)null);

                    b.HasDiscriminator<string>("BagType").HasValue("Bag");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PostOfficeAPI.Models.Shipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AirportCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("PostOfficeAPI.Models.BagWithLetters", b =>
                {
                    b.HasBaseType("PostOfficeAPI.Models.Bag");

                    b.Property<int>("CountOfLetters")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 3)");

                    b.HasDiscriminator().HasValue("letter");
                });

            modelBuilder.Entity("PostOfficeAPI.Models.BagWithParcels", b =>
                {
                    b.HasBaseType("PostOfficeAPI.Models.Bag");

                    b.HasDiscriminator().HasValue("parcel");
                });

            modelBuilder.Entity("Parcel", b =>
                {
                    b.HasOne("PostOfficeAPI.Models.BagWithParcels", "BagWithParcels")
                        .WithMany("Parcels")
                        .HasForeignKey("BagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BagWithParcels");
                });

            modelBuilder.Entity("PostOfficeAPI.Models.Bag", b =>
                {
                    b.HasOne("PostOfficeAPI.Models.Shipment", "Shipment")
                        .WithMany("Bags")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("PostOfficeAPI.Models.Shipment", b =>
                {
                    b.Navigation("Bags");
                });

            modelBuilder.Entity("PostOfficeAPI.Models.BagWithParcels", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
